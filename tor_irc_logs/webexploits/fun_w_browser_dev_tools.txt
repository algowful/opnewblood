< teacher> [V] > today we'll be doing interesting things with web dev
< teacher> [__A] > what is the lesson about?
< teacher> [__A] > ty
< teacher> [V] > kind of a how to hack chillily, and mostly looking cool while doing it
< teacher> [V] > everything I'll do will be done basically only using the console on any browser. Of course for security the best is firefox (ff) according to many
< teacher> [V] > but chrome has the best dev tools so gtfo
< teacher> [V] > now, from a browser you can do countless things including the SQLi attacks that have been addressed in other lessons
< teacher> [V] > using emails to phish
< teacher> [V] > normal XSS injections and similar
< teacher> [V] > but today we're tackling a slightly chiller topic
< teacher> [V] > so, assuming we're all on chrome
< teacher> [V] > if not open a session now
< teacher> [V] > otherwise it should work on ff (not for fuck, firefox, remember. Pretty important) as well
< teacher> [V] > for starters, click on the address bar on any site, and type exaclty this:
< teacher> [V] > javascript:document.write(1)
< teacher> [V] > if you copy it, chrome will remove the "javascript:" bit
< teacher> [V] > so make sure it's in
< teacher> [V] > now, whatever website you may be on, usually you'd just see a "1" appear in your screen
< teacher> [V] > believe it or not, this can be pretty powerful
< teacher> [V] > after `javascript:` you can obviously insert any javascript you want
< teacher> [V] > that is JavaScript, I'll personally strangle whoever says that JS is Java
< teacher> [V] > oh yeah, if that doesn't work you may have "noscript" on
< teacher> [V] > anyway, why is this powerful?
< __B> may i add, noscript blocks this =)
< teacher> [V] > I mean, you can do all of this from the dev tools anyway, right?
< teacher> [V] > sure, you can, but the "javascript:whatever" is interpreted as a URL
< alyn> powerful because you can use this in an anchor?
< __B> of course
< Kadoshi7> what is being taught and what is objectivity ?
< teacher> [V] > that is one of the cases
< teacher> [V] > but you can bookmark urls
< teacher> [V] > so you can have instant access to any scripts you want without copy pasting
< teacher> [V] > in chrome, I just have a "js" folder in my bookmarks that has a lot of fun scripts to play with
< teacher> [V] > just rememeber to add "javascript:" before any script in the URL location of the bookmark, you can figure that out
< DLF> umm
< teacher> [V] > here's a few fun scripts that I have:
< DLF> Adress bar of a site ? Remove it and write javascript:document.write(1)
< teacher> [V] > javascript:document.body.contentEditable=true;document.body.spellcheck=false;
< teacher> [V] > put that in a bookmark, go to any page, click the bookmark, and now click on mostly any exposed text in the page
< teacher> [V] > you'll notice you can edit the text
< teacher> [V] > ofc this is JS that only runs on the client, you're not actually modifying the site
< teacher> [V] > if only it were that easy :P
< teacher> [V] > it confuses the shit out of anyone you might want to convince you're a tophacker that is around you
< teacher> [V] > but is also nice if you want to maybe take false screenshots without bothering with the dev tools or photoshop
< teacher> [V] > next script:
< DLF> Wait !!! Where to put javascript:document.write(1) ?
< alyn> url bar
< teacher> [V] > yeah
< alyn> kthxbai
< DLF> i did
< __B> in the address bar dlf
< teacher> [V] > or in a bookmark and then click the book mark
< DLF> hm
< teacher> [V] > DLF is your noscript on? Add an exception or something
< rudy> how do i activate "noscript.allowURLBarJS"
< teacher> [V] > please PM __B about it and figure out what is wrong, then maybe explain it here really quick
< __B> about:config in the address bar
< teacher> [V] > now, to the next script: it requires quite a bit more set up
< __B> search for "noscript.allowURLBarJS"
< teacher> [V] > but it's totally worth it
<@teacher> [V] > go to the console (press ESC in chrome, that does it. Google it if I have no idea what I'm talking about)
<@teacher> [V] > now open an empty page (like the home page in chrome and ff)
<@teacher> [V] > with the console open
<@__B> i think it's f12 in ff and then click the console tab
<@teacher> [V] > so, what we're trying to do is find out what every property of the "window" is, so we can check the difference between that and any other site to expose global variables
<@teacher> [V] > oh yeah, F12 to open the dev tools in chrome
<@teacher> [V] > or just right click and find something like "inspect element" or "inspect HTML"
<@teacher> [V] > now, to loop through every variable in an object in JSland we do `for( var i in objectName ) { do things }`
<@teacher> [V] > we want to have an array of all of the properties of a window with nothing added to it
<@teacher> [V] > that's as simple as:
<@teacher> [V] > var windowProperties = []; for( var windowPropertyName in window ) windowProperties.push( windowPropertyName ); windowProperties.splice( windowProperties.indexOf( 'windowProperties' ), 1 ); windowProperties.splice( windowProperties.indexOf( 'windowPropertyName' ), 1 ); JSON.stringify( windowProperties )
<@teacher> [V] > the JS behind it is not too complex, but this is not a "learn JS with Dora the explorer" class
<@teacher> [V] > so just stick with it or use google if you don't get it :P
<@teacher> [V] > anyway, the end result should be the string containing an array
<@teacher> [V] > and now we get to the actual bookmark
<@teacher> [V] > we want to check it against new properties, so we find every property in the new window, and if a property wasn't in the other window, we print it to the console
<@teacher> [V] > easy enough?
<@teacher> [V] > I'll make a quick pastebin of the end result, it's kinda silly to do it in this chat
<@teacher> [V] > https://ghostbin.com/paste/8uue8
<@teacher> [V] > that's what you'd get for a chrome with a few plugins installed
<@teacher> [V] > just replace the array with the result of whatever you saw before
<@teacher> [V] > so, now we got 2 scripts
<@teacher> [V] > this last one was kinda contorted
<@teacher> [V] > but here's comes a much funnier one to kinda prank people
<@teacher> [V] > funnily enough, we can modify the CSS of a page using JS
<@teacher> [V] > if you're new to CSS, that's what defines the colors of the page and the layout
<@teacher> [V] > there's a new thing coming to market in CSS called `filters`, with which you can do all kinds of fun things
<@teacher> [V] > that combined with CSS animations, which allow you to transition between values of different things smoothly, you get a very sweet pie
<@teacher> [V] > ever wish your target thought they were on lsd in the middle of a job?
<@teacher> [V] > well, wait no more
<@teacher> [V] > so, the css for accomplishing that is divided in 2 parts: a something that selects every element in the page and applies the animaton to it, and a part that does the actual animation
<@teacher> [V] > it's not important to understand how it works for now, but it's pretty straight forward after a couple of minutes of googling
<@teacher> [V] > so here's the css:
<@teacher> [V] > * { animation: lulz 10s linear infinite; -webkit-animation: lulz 10s linear infinite } @keyframes lulz { 0% { filter: hue-rotate(.01deg); } 50% { filter: hue-rotate(180deg); } 100% { filter: hue-rotate(359.9deg)}  } @-webkit-keyframes lulz { 0% { -webkit-filter: hue-rotate(.01deg); } 50% { -webkit-filter: hue-rotate(180deg); } 100% { -webkit-filter: hue-rotate(359.9deg)}  }
<@teacher> [V] > so, there are countless ways to inject CSS in a page with JS
<@teacher> [V] > but we're going to use the laziest one and append to the page a <style> tag with that css in it
<@teacher> [V] > so, the js:
<@teacher> [V] > javascript:document.body.innerHTML += " * { animation: lulz 10s linear infinite; -webkit-animation: lulz 10s linear infinite } @keyframes lulz { 0% { filter: hue-rotate(.01deg); } 50% { filter: hue-rotate(180deg); } 100% { filter: hue-rotate(359.9deg)}  } @-webkit-keyframes lulz { 0% { -webkit-filter: hue-rotate(.01deg); } 50% { -webkit-filter: hue-rotate(180deg); } 100% { -webkit-filter: hue-rotate(359.9deg)}  }"
<@teacher> [V] > that's it :D
<@teacher> [V] > to make the animation faster, try changing the `10s` (both) to whatever you like
<@teacher> [V] > and remember that with those bookmarks you can inject any javascript, therefore any css if you're into that
<@teacher> [V] > so, again, the limits are endless
<@teacher> [V] > I assume everyone kind of knows how to use the dev tools anyway. You shouldn't need oirc for that at all, there are countless amazingly made tutorials by google and similar
<@teacher> [V] > just look for "browser dev tools"
<@teacher> [V] > you can of course use those bookmarks also to click on things
<@teacher> [V] > in a sequence or anything
<@teacher> [V] > for example if you go on the "poke page" of facebook, I can make the thing poke everyone
<@teacher> [V] > or regardless of bookmarks, you can set some clicks up on a loop via the dev tools to annoy someone
<@teacher> [V] > or send messages determined with JS from the console
<@teacher> [V] > again in a loop
<@teacher> [V] > make sure that the loop has some delay with window.setInterval()
<@teacher> [V] > if you have no idea what I'm talking about go on mdn and google that
<@teacher> [V] > ofc the limit is your imagination...
<@teacher> [V] > and how much you can play with JS
<@teacher> [V] > JS can be extremely useful in so many instances
<@teacher> [V] > calling XHR requests (XMLHttpRequest)
<@teacher> [V] > maybe to DDoS a site if you can't be bothered to use a program or your terminal (you can do it on a mac if that makes you feel better)
<@teacher> [V] > well, inefficiently, but still possible
<@teacher> [V] > it's easy to set up a SQLi test using bookmarks, filling inputs with JS
<@teacher> [V] > but yeah, all of this isn't really possible if your knowledge of JS is very limited
<@teacher> [V] > but you can still copy scripts like document.body.contentEditable=true;document.body.spellcheck=false;
<@teacher> [V] > any major questions so far?
<&rackham> guess not lol
<@teacher> [V] > if it's just about not understanding JS I can't help you now, contact me later maybe, but remember that there are countless resources
<@teacher> [V] > like stack overflow and mdn (mozilla developer network)
<@teacher> [V] > So, this was a quick intro to using JS in a lazy and efficient way
< kashloca> we can use firebug too for firefox
< kashloca> ??
<&rackham> V you done?
<@teacher> [V] > yeah, sure
<@teacher> [V] > wrapping up still :P
<@_V> I usually hang out in __Alien (alienzonexivmqro.onion)
< kashloca> teacher
<@_V> so if you have any questions, you'll probably find me there
<@teacher> [V] > that's where the bridge is connected to, and it's possible to do it using bookmarks if you really wanted to :P
<@teacher> [V] > I could be giving another lesson soon on more advanced lazy JS efficiency, so tune on for that one!
<@teacher> [V] > thanks everyone! (tips fedora)
< DLF> I still don\u00b4t know where to put : var windowProperties = [] ... in chromium.
